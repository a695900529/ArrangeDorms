<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yrfk.arrangedorms.mapper.administratorEntityMapper">
  <resultMap id="BaseResultMap" type="cn.yrfk.arrangedorms.entity.administratorEntity">
    <id column="ar_number" jdbcType="INTEGER" property="arNumber" />
    <result column="ar_password" jdbcType="VARCHAR" property="arPassword" />
    <result column="ar_name" jdbcType="VARCHAR" property="arName" />
    <result column="ar_jurisdiction" jdbcType="VARCHAR" property="arJurisdiction" />
    <result column="ar_control_limit" jdbcType="VARCHAR" property="arControlLimit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ar_number, ar_password, ar_name, ar_jurisdiction, ar_control_limit
  </sql>
  <select id="selectByExample" parameterType="cn.yrfk.arrangedorms.entity.administratorEntityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tab_administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_administrator
    where ar_number = #{arNumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_administrator
    where ar_number = #{arNumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yrfk.arrangedorms.entity.administratorEntityExample">
    delete from tab_administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yrfk.arrangedorms.entity.administratorEntity">
    insert into tab_administrator (ar_number, ar_password, ar_name, 
      ar_jurisdiction, ar_control_limit)
    values (#{arNumber,jdbcType=INTEGER}, #{arPassword,jdbcType=VARCHAR}, #{arName,jdbcType=VARCHAR}, 
      #{arJurisdiction,jdbcType=VARCHAR}, #{arControlLimit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yrfk.arrangedorms.entity.administratorEntity">
    insert into tab_administrator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="arNumber != null">
        ar_number,
      </if>
      <if test="arPassword != null">
        ar_password,
      </if>
      <if test="arName != null">
        ar_name,
      </if>
      <if test="arJurisdiction != null">
        ar_jurisdiction,
      </if>
      <if test="arControlLimit != null">
        ar_control_limit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="arNumber != null">
        #{arNumber,jdbcType=INTEGER},
      </if>
      <if test="arPassword != null">
        #{arPassword,jdbcType=VARCHAR},
      </if>
      <if test="arName != null">
        #{arName,jdbcType=VARCHAR},
      </if>
      <if test="arJurisdiction != null">
        #{arJurisdiction,jdbcType=VARCHAR},
      </if>
      <if test="arControlLimit != null">
        #{arControlLimit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yrfk.arrangedorms.entity.administratorEntityExample" resultType="java.lang.Long">
    select count(*) from tab_administrator
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tab_administrator
    <set>
      <if test="record.arNumber != null">
        ar_number = #{record.arNumber,jdbcType=INTEGER},
      </if>
      <if test="record.arPassword != null">
        ar_password = #{record.arPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.arName != null">
        ar_name = #{record.arName,jdbcType=VARCHAR},
      </if>
      <if test="record.arJurisdiction != null">
        ar_jurisdiction = #{record.arJurisdiction,jdbcType=VARCHAR},
      </if>
      <if test="record.arControlLimit != null">
        ar_control_limit = #{record.arControlLimit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tab_administrator
    set ar_number = #{record.arNumber,jdbcType=INTEGER},
      ar_password = #{record.arPassword,jdbcType=VARCHAR},
      ar_name = #{record.arName,jdbcType=VARCHAR},
      ar_jurisdiction = #{record.arJurisdiction,jdbcType=VARCHAR},
      ar_control_limit = #{record.arControlLimit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yrfk.arrangedorms.entity.administratorEntity">
    update tab_administrator
    <set>
      <if test="arPassword != null">
        ar_password = #{arPassword,jdbcType=VARCHAR},
      </if>
      <if test="arName != null">
        ar_name = #{arName,jdbcType=VARCHAR},
      </if>
      <if test="arJurisdiction != null">
        ar_jurisdiction = #{arJurisdiction,jdbcType=VARCHAR},
      </if>
      <if test="arControlLimit != null">
        ar_control_limit = #{arControlLimit,jdbcType=VARCHAR},
      </if>
    </set>
    where ar_number = #{arNumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yrfk.arrangedorms.entity.administratorEntity">
    update tab_administrator
    set ar_password = #{arPassword,jdbcType=VARCHAR},
      ar_name = #{arName,jdbcType=VARCHAR},
      ar_jurisdiction = #{arJurisdiction,jdbcType=VARCHAR},
      ar_control_limit = #{arControlLimit,jdbcType=VARCHAR}
    where ar_number = #{arNumber,jdbcType=INTEGER}
  </update>
</mapper>